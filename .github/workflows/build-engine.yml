name: 'Build engine'

on:
  push:
    branches:
      - '**'
    paths:
      - '.github/workflows/**'
      - 'gamedata/**'
      - 'sdk/**'
      - 'src/**'
      - '**/CMakeLists.txt'
      - '**/*.ltx'
  pull_request:
    branches:
      - '**'
    paths:
      - '.github/workflows/**'
      - 'gamedata/**'
      - 'sdk/**'
      - 'src/**'
      - '**/CMakeLists.txt'
      - '**/*.ltx'

defaults:
  run:
    shell: pwsh

jobs:
  build-engine:
    name: 'Build engine'

    strategy:
      matrix:
        system:
          - windows-2022
        config:
          - Debug
          - Release
        platform:
          - Win32
          - x64

    runs-on: ${{ matrix.system }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup NuGet
        uses: nuget/setup-nuget@v1
        with:
          nuget-version: '>=5'

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1

      - name: Cache packages
        uses: actions/cache@v3
        id: cache
        with:
          path: |
            ${{ github.workspace }}/build/packages
          key: |
            ${{ runner.os }}-nuget-${{ hashFiles('**/*.nupkg') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Check cache
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
            echo "Cache exists"

      - name: Configure project
        run: |
          cmake `
            -S ${{ github.workspace }} `
            -B ${{ github.workspace }}/build `
            -G "Visual Studio 17 2022" `
            -A ${{ matrix.platform }} `
            -T host=x64 `
            -D IXRAY_UTILS=OFF `
            -D IXRAY_MP=OFF `
            -D IXRAY_COMPRESSOR_ONLY=OFF

      - name: Build project
        run: |
          cmake --build ${{ github.workspace }}/build --config ${{ matrix.config }}

      - name: Upload binaries
        uses: actions/upload-artifact@v3
        with:
          name: bin-engine-(${{ matrix.platform }}-${{ matrix.config }})-(${{ github.sha }})
          path: |
            build/bin/${{ matrix.config }}/*.exe
            build/bin/${{ matrix.config }}/*.dll

      - name: Upload libraries
        uses: actions/upload-artifact@v3
        with:
          name: lib-engine-(${{ matrix.platform }}-${{ matrix.config }})-(${{ github.sha }})
          path: |
            build/lib/${{ matrix.config }}/*.lib
            build/lib/${{ matrix.config }}/*.exp

  build-compressor:
    name: 'Build compressor'

    strategy:
      matrix:
        system:
          - windows-2022
        config:
          - Release
        platform:
          - Win32

    runs-on: ${{ matrix.system }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1

      - name: Configure project
        run: |
          cmake `
            -S ${{ github.workspace }} `
            -B ${{ github.workspace }}/build `
            -G "Visual Studio 17 2022" `
            -A ${{ matrix.platform }} `
            -T host=x64 `
            -D IXRAY_UTILS=OFF `
            -D IXRAY_MP=OFF `
            -D IXRAY_COMPRESSOR_ONLY=ON

      - name: Build project
        run: |
          cmake --build ${{ github.workspace }}/build --config ${{ matrix.config }}

      - name: Upload compressor
        uses: actions/upload-artifact@v3
        with:
          name: bin-compressor-(${{ matrix.platform }}-${{ matrix.config }})-(${{ github.sha }})
          path: |
            build/bin/${{ matrix.config }}/

  pack-assets:
    name: 'Pack assets'

    needs: build-compressor

    strategy:
      matrix:
        system:
          - windows-2022
        config:
          - Release
        platform:
          - Win32

    runs-on: ${{ matrix.system }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get binaries
        uses: actions/download-artifact@v3
        with:
          name: bin-compressor-(${{ matrix.platform }}-${{ matrix.config }})-(${{ github.sha }})
          path: build/bin/${{ matrix.config }}/

      - name: Generate patch
        run: |
          ${{ github.workspace }}/generate-patch.bat
          move ${{ github.workspace }}/patch `
            ${{ github.workspace }}/temp/gamedata

      - name: Upload gamedata
        uses: actions/upload-artifact@v3
        with:
          name: gamedata-(${{ github.sha }})
          path: temp/gamedata/

      - name: Upload patch
        uses: actions/upload-artifact@v3
        with:
          name: patch-(${{ github.sha }})
          path: patches/xpatch_03.db
